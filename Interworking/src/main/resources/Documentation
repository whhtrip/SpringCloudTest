该文档记录了本项目搭建和运行情况

SpringBoot版本信息
1，数据源
    依赖-->配置文件中配置->代码中配置->指定数据源类型
    常用数据源：
        Tomcat中自带的JDBC数据源
        Durid数据源
        Dbcp数据源，Dbcp2
    SpringBoot默认支持的数据源：dbcp，dbcp2，tomcat，hikari
    SpringBoot选择数据源优先级别：tomcat>HikariCP>DBCP>DBCP2(如果想要使用非默认连接池，需要指定类型type)
    各种数据源之间的差别：

    跟踪源码可以得到默认创建的数据源类型：DataSource.create().builder()
        创建数据源之后还做了什么
    配置数据源：自动选择的有HikariCP、dbcp、tomcat，druid数据源没有自动选择成功
2，集成Mybatis
    依赖-->配置mapper.xml-->配置mapperBean-->配置SqlSessionFactory
    使用SpringBoot集成的Mybatis

3，集成Consul
    依赖-->配置
    不同的SpringBoot版本集成Consul的方式不同：不同的SpringBoot版本，不同的SpringCloud版本，不同的工具集成方式。

4,Redis
    依赖-->配置

5,日志
    slf4j:输出，配置输出级别：
    打印类型：
    输出配置：格式配置-->文件配置-->文件大小和数量配置
        日志级别：debug < info < warn < error < fatal
    输出：
        error：error
        warn：warn、error
        info、all、trace：info、warn、error
        debug：debug、info、warn、error
    %p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL
    %d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy-MM-dd HH:mm:ss,SSS}，SSS为毫秒数(也可以写为SS，只不过SSS如果不足三位会补0)，输出类似：2011-10-18 22:10:28,021
    %r: 输出自应用启动到输出该日志耗费的毫秒数
    %t: 输出产生日志的线程名称
    %l: 输出日志事件的位置，相当于%c.%M(%F:L)的组合，包括类全名、方法、文件名以及在代码中行数。例如:cn.xm.test.PlainTest.main(PlanTest.java:12)
    %c: 输出日志信息所属的类目，通常就是所在类的全名。可写为%c{num},表示取完整类名的层数，从后向前取，比如%c{2}取 "cn.qlq.exam"类为"qlq.exam"。
    %M: 输出产生日志信息的方法名
    %x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中
    %%: 输出一个"%"字符
    %F: 输出日志消息产生时所在的文件名称
    %L: 输出代码中的行号
    %m: 输出代码中指定的消息,产生的日志具体信息
    %n: 输出一个回车换行符，Windows平台为"\r\n"，Unix平台为"\n"输出日志信息换行

6，JDK相关信息
    security相关：
    classloader相关：

7,SpringBoot
    不同的注解注入不同的容器中：：：：
    Bean相关文件：
        BeanFactoryUtils，
        AbstractBeanFactory，
        AbstractAutowireCapableBeanFactory，
        DefaultListableBeanFactory，
        ClassUtils，
        BeanWrapperImpl，
        ConstructorResolver，
        AbstractBeanDefinition，
        DefaultSingletonBeanDefine,
        AutowiredAnnotationBeanPostProcessor

